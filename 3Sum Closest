class Solution {
    fun threeSumClosest(nums: IntArray, target: Int): Int {
        nums.sort()
        var closest = nums[0] + nums[1] + nums[2]
        for(i in 0 until nums.size - 2){
            var left = i + 1
            var right = nums.size - 1
            
            while(left < right){
                val sum = nums[i] + nums[left] + nums[right]
                if (kotlin.math.abs(sum - target) < kotlin.math.abs(closest - target)) {
                    closest = sum
                }
                if(sum < target){
                   left++
                }else if(sum > target){
                    right--
                }else{
                    return sum
                }
            }
        } 
        return closest
    }
}

//input = 
//Input: nums = [-1,2,1,-4], target = 1
//Output: 2
//Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
