/*
             Example: nums = [2, 7, 11, 15], target = 9

             Step 1: i = 0, nums[i] = 2
                     complement = 9 - 2 = 7
                     âœ… We need 7 to make 9. Is 7 already seen? No â†’ store 2.

             Step 2: i = 1, nums[i] = 7
                     complement = 9 - 7 = 2
                     âœ… Do we already have 2? Yes, from step 1!
                     ðŸŽ¯ Pair found â†’ (2, 7), indices (0, 1)
            */

class Solution {
    fun twoSum(nums: IntArray, target: Int): IntArray {
        val map = mutableMapOf<Int, Int>()  // number â†’ index

        for(i in nums.indices){
            val complement = target - nums[i]

            if(map.containsKey(complement)){
                return intArrayOf(map[complement]!!, i)
            }
            map[nums[i]] = i

        }

        return intArrayOf()
    }
}
